name: Semantic Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  GO_VERSION: '1.23.2'
  NODE_VERSION: '23.2.0'

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install semantic-release dependencies
        run: |
          cd .github
          npm ci
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      
      - name: Build application
        run: |
          make install-tools
          make build
      
      - name: Run tests
        run: make test
      
      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd .github
          npx semantic-release

  build-release-assets:
    name: Build Release Assets
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
          - goos: windows
            goarch: amd64
            suffix: windows-amd64.exe
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: v${{ needs.release.outputs.new_release_version }}
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Build TypeScript
        run: |
          cd web/components
          npm ci
          npm run build
      
      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: |
          if [ "$GOOS" = "linux" ] && [ "$GOARCH" = "arm64" ]; then
            CGO_ENABLED=0 go build -ldflags="-s -w" -o famstack-${{ matrix.suffix }} ./cmd/famstack
          else
            go build -ldflags="-s -w" -o famstack-${{ matrix.suffix }} ./cmd/famstack
          fi
      
      - name: Create release package (non-Windows)
        if: matrix.goos != 'windows'
        run: |
          mkdir -p release-package
          cp famstack-${{ matrix.suffix }} release-package/famstack
          cp README.md LICENSE release-package/
          tar -czf famstack-v${{ needs.release.outputs.new_release_version }}-${{ matrix.suffix }}.tar.gz -C release-package .
      
      - name: Create release package (Windows)
        if: matrix.goos == 'windows'
        run: |
          mkdir -p release-package
          cp famstack-${{ matrix.suffix }} release-package/famstack.exe
          cp README.md LICENSE release-package/
          cd release-package && zip -r ../famstack-v${{ needs.release.outputs.new_release_version }}-${{ matrix.suffix }}.zip .
      
      - name: Upload to release (tarball)
        if: matrix.goos != 'windows'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: famstack-v${{ needs.release.outputs.new_release_version }}-${{ matrix.suffix }}.tar.gz
          tag: v${{ needs.release.outputs.new_release_version }}
          overwrite: true
      
      - name: Upload to release (zip)
        if: matrix.goos == 'windows'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: famstack-v${{ needs.release.outputs.new_release_version }}-${{ matrix.suffix }}.zip
          tag: v${{ needs.release.outputs.new_release_version }}
          overwrite: true